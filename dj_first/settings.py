"""
Django settings for dj_first project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# 项目的根目录
# __file__文件描述符 setting 是文件对象
# os.path.abspath(__file__) 获取当前文件的绝对路径 /home/python/Desktop/code/dj_first/dj_first/settings.py
# os.path.dirname(os.path.abspath(__file__)) 目录的名字 /home/python/Desktop/code/dj_first/dj_first
# dirname ： /home/python/Desktop/code/dj_first
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# 秘钥
SECRET_KEY = ')ixybu!du$%7de!0kvfahr+rtd+hxxkec0m4@aj36)s0kodmgr'

# SECURITY WARNING: don't run with debug turned on in production!
# 调试模式
DEBUG = True

# 允许的域名
ALLOWED_HOSTS = []

# Application definition
# 安装应用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.UsersConfig',  # django 版本的新写法
    # 'users' 老版本的写法  “了解”
    'booktest.apps.BooktestConfig',
    'reqresp.apps.ReqrespConfig',
    'cookie_session.apps.CookieSessionConfig'
]
# 中间件，相当于flask的钩子
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware', # TODO
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cookie_session.middleware.my_middleware'
]
# 项目根路由的配置
ROOT_URLCONF = 'dj_first.urls'
# 模板的配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# WSGI协议的配置
WSGI_APPLICATION = 'dj_first.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
# 数据库的配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 更改数据库的引擎
        'NAME': 'books',  # 定义使用的数据库
        'HOST': '127.0.0.1',  # 数据库主机
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据用户名
        'PASSWORD': 'mysql',  # 数据库用户密码
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
# 认证密码的验证器
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
# 语言设置
LANGUAGE_CODE = 'zh-hans'
# 时区设置
TIME_ZONE = 'Asia/Shanghai'
# 国际化英语
USE_I18N = True
# 本地化
USE_L10N = True
# 时区
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
# 静态文件访问路由
# 只能在调试模式下使用
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static_files')
]
# 127.0.0.1/static/index.html 默认的方式访问

# STATIC_URL = ‘python’ 自定义修改
# 127.0.0.1:8000/python/index.html 自定义的方式访问

# redis的缓存配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",  # 使用redis进行缓存，更改缓存的后端
        "LOCATION": "redis://127.0.0.1:6379/1",  # redis Ip和端口，以及缓存存放的位置
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}
SESSION_ENGINE = "django.contrib.sessions.backends.cache"  # 缓存使用的引擎
SESSION_CACHE_ALIAS = "default"  # 缓存使用的方式
MEDIA_ROOT=os.path.join(BASE_DIR,"static_files/media")